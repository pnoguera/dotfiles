syntax on

" Set the default file encoding to UTF-8:
set encoding=utf-8
set background=dark
set expandtab
set smarttab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set showcmd	    	" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
set hidden          " Hide buffers when they are abandoned
set mouse=a		    " Enable mouse usage all modes
set guioptions+=a   " Enable x11 copy from visual select
set showmatch
set modeline
set hlsearch
set complete+=kspell
set list
set listchars=tab:â†’\ ,trail:~,extends:>,precedes:< " Show whitespace
set foldmethod=indent " Folding based on indentation
set nofoldenable
"set cursorline
set laststatus=2
set visualbell " no beeps
"set ruler
set dictionary=/usr/share/dict/words


""""""""""""""""""""""""""""""""
"""""      Key Mappings    """""
""""""""""""""""""""""""""""""""

" Buffer cycle
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
" Folding
nnoremap <space> za
vnoremap <space> zf
" unmap space in selection mode for snippets
sunmap <space>

" tag browser
nmap <F8> :TagbarToggle<CR>


" Workaroung for gx not working
" https://github.com/vim/vim/issues/4738
let g:netrw_nogx = 1
function! OpenUrlUnderCursor()
    execute "normal BvEy"
    let url=matchstr(@0, '[a-z]*:\/\/[^ >,;]*')
    if url != ""
        silent exec "!xdg-open '".url."'" | redraw! 
        echo "opened ".url
    else
        echo "No URL under cursor."
    endif
endfunction
nmap gx :call OpenUrlUnderCursor()<CR>


" Automatically install vim-plug and run PlugInstall if vim-plug is not found.
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Initialize vim-plug.
call plug#begin('~/.vim/plugged')
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp' "use language servers
Plug 'mattn/vim-lsp-settings' "installs language servers (npm is a requirement)
Plug 'prabirshrestha/asyncomplete.vim' "autocomplete
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/asyncomplete-ultisnips.vim' "autocomplete
Plug 'prabirshrestha/asyncomplete-emoji.vim' "autocomplete
Plug 'thomasfaingnaert/vim-lsp-ultisnips'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets' "snippets

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-surround' "Surrounding plugin
Plug 'tpope/vim-unimpaired' "Unimpaired
Plug 'tpope/vim-commentary' "Add comment with gc
Plug 'tpope/vim-repeat' "Repeat plugin actions with .
Plug 'tpope/vim-speeddating' "Repeat plugin actions with .
Plug 'tpope/vim-dispatch' "Dispatch plugin
Plug 'tpope/vim-projectionist'
Plug 'jiangmiao/auto-pairs'
Plug 'nazo/pt.vim' "pt searcher plugin
" Plug 'junegunn/limelight.vim'
"
"
Plug 'drewtempelmeyer/palenight.vim'

Plug 'airblade/vim-gitgutter' " shows git diff in the gutter
Plug 'tpope/vim-fugitive' " git branch
Plug 'fatih/vim-go'
Plug 'buoto/gotests-vim', {'for': 'go'} 
Plug 'sheerun/vim-polyglot'
Plug 'dense-analysis/ale'
Plug 'buoto/gotests-vim', {'for': 'go'} 
Plug 'JamshedVesuna/vim-markdown-preview', {'for': 'markdown'} "markdown plugin
Plug 'vimwiki/vimwiki'
Plug 'lervag/vimtex' , {'for': 'tex'} "Latex plugin. https://wikimatze.de/vimtex-the-perfect-tool-for-working-with-tex-and-vim/"
Plug 'majutsushi/tagbar' "tag browser
Plug 'tell-k/vim-autopep8', {'for': 'python'} "Autopep8 for python  "

call plug#end()

colorscheme palenight
