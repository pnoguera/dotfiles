# cat << ►_◄ > /dev/null

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' 
set -g @plugin 'tmux-plugins/tmux-continuum' # Save tmux on restart
set -g @plugin 'tmux-plugins/tmux-battery'

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 0                      # fastest command sequences
set -sg repeat-time 600                   # increase repeat timeout

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

# uncomment to force vi-style key bindings
# emacs is the default unless $EDITOR or $VISUAL contain 'vi'
#set -g status-keys vi
#setw -g mode-keys vi

#set -g status-utf8 on                     # expect UTF-8
#setw -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if 'which -s reattach-to-user-namespace' 'set -g default-command "tmux rename-window initializing; tmux set -w automatic-rename; reattach-to-user-namespace $SHELL -l"'

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# quick view of processes
bind '~' split-window "exec htop"

# set vi keys
setw -g mode-keys vi


# -- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename off # rename window to reflect current program
set-option -g allow-rename off
# renumber windows when a window is closed
set -g renumber-windows on

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# 24 hour clock
setw -g clock-mode-style 24

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# activity
set -g monitor-activity on
set -g visual-activity off

# tmux theme, colors and status line
# available themes:
#   - powerline (a powerline inspired theme)
#   - powerline_patched_font (a powerline inspired theme using a patched font)
tmux_conf_theme=powerline


# -- status bar ---------------------------------------------------------------
set -g status on
set -g status-interval 10
set -g status-justify left
set -g status-keys vi
#set -g status-left "#[fg=colour17,bg=colour190] #S #[fg=colour190,bg=colour232,nobold,nounderscore,noitalics]"
set -g status-left "#[fg=colour17,bg=colour190] #S #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #F #[fg=colour238,bg=colour232,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour232,nobold,nounderscore,noitalics]"

set -g status-left-length 100
set -g status-left-style default
set -g status-position bottom
set -g status-right "#[fg=colour232,bg=colour232,nobold,nounderscore,noitalics]#[fg=colour85,bg=colour232] #{battery_icon} #{battery_percentage} #{battery_remain} #[fg=colour238,bg=colour232,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] %b %d  %R #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #H "
#set -g status-right "#[fg=colour238,bg=colour232,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #{battery_icon} #{battery_percentage} #{battery_remain}  %Y-%m-%d  %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #h "
#set -g status-right "#[fg=colour238,bg=colour232,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238]#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} #[fg=colour255,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #h "
set -g status-right-length 100
set -g status-right-style default
set -g status-style fg=colour253,bg=colour232

set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=colour232,bg=colour39]#[fg=colour16,bg=colour39,bold] #I  #W #[fg=colour39,bg=colour232,nobold]"
set -g window-status-format "#[fg=colour232,bg=colour232]#[default]#I  #W#[fg=colour232,bg=colour232]"
set -g window-status-style fg=colour85,bg=colour232
set -g window-status-activity-style fg=colour190,blink,bg=colour232

# -- restore session -----------------------------------------------------------
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'

# -- navigation ----------------------------------------------------------------

# create new session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'
 
# pane/window movement
bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key . command-prompt -p "move window to:" "move-window -r -t ':%%'"

# pane navigation
bind-key -n C-right next
bind-key -n C-left prev
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
#bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'
bind + break-pane

# pane resizing
bind -r H resize-pane -L 3
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# pane selection
bind-key -n C-Up             select-pane -U
bind-key -n C-Down           select-pane -D
bind-key -n C-Left           select-pane -L
bind-key -n C-Right          select-pane -R

# window navigation
bind -n S-Left  previous-window
bind -n S-Right next-window
#bind Space last-window      # move to last active window

# Layout
bind Space next-layout

# toggle mouse
bind m run "tmux show -g mouse |grep -q off && (tmux set -g mouse on && tmux display-message 'mouse on') || (tmux set -g mouse off && tmux display-message 'mouse off')"

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# toggle synchronize pane

bind-key y set-window-option synchronize-panes

# Window creation
bind c new-window -c '#{pane_current_path}'
bind c new-window

# Split window
bind '"' split-window -h -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# -- list choice ---------------------------------------------------------------

bind -T choice-mode-vi h send-keys -X tree-collapse
bind -T choice-mode-vi l send-keys -X  tree-expand
run 'tmux bind -T choice-mode-vi K send-keys -X start-of-list 2> /dev/null'
run 'tmux bind -T choice-mode-vi J send-keys -X end-of-list 2> /dev/null'
bind -T choice-mode-vi H send-keys -X  tree-collapse-all
bind -T choice-mode-vi L send-keys -X  tree-expand-all
bind -T choice-mode-vi Escape send-keys -X  cancel


# -- edit mode -----------------------------------------------------------------

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -cT edit-mode-vi H send-keys -X  start-of-line
bind -cT edit-mode-vi L send-keys -X  end-of-line
bind -cT edit-mode-vi q send-keys -X  cancel
bind -cT edit-mode-vi Escape send-keys -X  cancel


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -T copy-mode-vi v send-keys -X  begin-selection
bind -T copy-mode-vi C-v send-keys -X  rectangle-toggle
bind -T copy-mode-vi y send-keys -X  copy-selection
bind -T copy-mode-vi Escape send-keys -X  cancel
bind -T copy-mode-vi H send-keys -X  start-of-line
bind -T copy-mode-vi L send-keys -X  end-of-line

# copy to Mac OSX pasteboard
if 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'


# -- user defined --------------------------------------------------------------

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'


# -- 8< ------------------------------------------------------------------------

#run 'cut -c3- ~/.tmux.conf | sh -s apply_theme $tmux_conf_theme'
#run 'cut -c3- ~/.tmux.conf | sh -s apply_configurable_bindings $tmux_conf_new_windows_retain_current_path $tmux_conf_new_panes_retain_current_path'
#run 'for name in $(printenv | grep -Eo ^tmux_conf_[^=]+); do tmux setenv -gu $name; done;'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/plugins/tmux-battery/battery.tmux'
run-shell '~/.tmux/plugins/tmux-continuum/continuum.tmux'

# ►_◄
#
# # exit the script if any statement returns a non-true return value
# set -e
